{"version":3,"sources":["reducers/reducers.js","reducers/searchByName.js","reducers/setSelectedTree.js","reducers/getTreeDetail.js","components/FeaturedTree/FeaturedTree.js","components/FeaturedQuote/FeaturedQuote.js","components/RegionSelector/RegionSelector.js","customUI/react-select-options.js","components/TreeChar/TreeChar.js","components/FlowersAndFruit/FlowersAndFruit.js","components/SiteConditions/SiteConditions.js","components/SearchByChar/SearchByChar.js","components/SelecTree/SelectTree.js","components/ResultCounter/ResultCounter.js","components/ResultFilter/ResultFilter.js","components/ResultSort/ResultSort.js","components/ResultPagination/ResultPagination.js","components/ResultOps/ResultOps.js","components/ResultCard/ResultCard.js","components/ResultGallery/ResultGallery.js","apis/selectree_api.js","components/SearchByName/SearchByName.js","actions/search.js","components/Result/Result.js","components/TreeNameInfo/TreeNameInfo.js","components/TreeDetailGallery/TreeDetailGallery.js","components/TreeInfoCard/GeneralInfo.js","components/TreeInfoCard/SiteConditions.js","components/TreeInfoCard/PestAndDiseaseInfo.js","components/TreeInfo/TreeInfo.js","components/TreeDetail/TreeDetail.js","actions/treeDetail.js","components/PacificIslandsFooter/PacificIslandsFooter.js","components/Footer/Footer.js","components/PacificIslandsBanner/PacificIslandsBanner.js","components/SelectreeBanner/SelectreeBanner.js","components/QuickLinks/QuickLinks.js","components/SelectreeNavbar/SelectreeNavbar.js","components/SelectreeHeader/SelectreeHeader.js","components/NotFound/NotFound.js","components/ErrorPage/ErrorPage.js","components/App/App.js","index.js"],"names":["combineReducers","suggestions","state","action","type","payload","selectedTree","treeDetail","FeaturedTree","Container","className","Row","Col","lg","span","offset","Image","fluid","src","process","Button","variant","size","React","Component","FeaturedQuote","RegionSelector","option","provided","backgroundColor","isFocused","color","control","base","borderColor","border","boxShadow","multiValue","styles","data","multiValueLabel","TreeChar","props","rangeChange","e","minHeight","Math","ceil","maxHeight","setState","minTreeHeight","floor","maxTreeHeight","console","log","foliageCheckChange","currentTarget","id","deciduousChecked","checked","evergreenChecked","fallColorCheckChange","fallColorChecked","caNativeCheckChange","caNativeChecked","selectChange","selected","label","value","Form","Group","controlId","Label","allowCross","defaultValue","min","max","onChange","this","marks","0","25","50","75","100","options","reactSelectStyles","htmlFor","FlowersAndFruit","selectFlowerColor","items","Error","map","i","err","fruitSelect","flowerColor","isMulti","closeMenuOnSelect","name","classNamePrefix","control-id","SiteConditions","sunsetZoneSelect","usdaZoneSelect","availablePlantingAreaSelect","selectreeWaterUseChange","selecTreeWaterVeryLow","selecTreeWaterLow","selecTreeWaterMedium","selecTreeWaterHigh","SearchByChar","SelecTree","ResultCounter","ResultFilter","filterResults","placeholder","ResultSort","val","ResultPagination","ResultOps","ResultCard","Card","style","width","Title","Subtitle","Img","ResultGallery","cards","card","key","Pagination","First","Item","active","Ellipsis","Last","axios","create","baseURL","SearchByName","startSearch","input","searchByName","length","matchFound","selectedTreeId","selectTree","treeName","getAttribute","treeId","searchInputs","document","getElementsByClassName","setTimeout","search","cleanText","replace","htmlParser","setAttribute","clearSearch","getTreeDetailURL","location","href","searchByNameClickHandler","onChangeHandler","treeData","tree_id","searchOnEnter","getTypeaheadSearch","onKeyPress","filterBy","labelKey","name_concat","onInputChange","onClick","renderMenuItemChildren","data-tree-id","dropdownClickHandler","onFocus","uuid","common","connect","searchString","dispatch","a","api","get","response","setSelectedTree","Result","marginTop","height","TreeNameInfo","renderScientificName","scientificName","xs","commonName","familyName","synonyms","s","otherCommonNames","genus","TreeDetailGallery","renderTreeDetailGallery","images","image","link","GeneralInfo","renderMemo","generalInfo","memo","dangerouslySetInnerHTML","__html","renderNativeRange","native_range","Body","Text","renderSunsetZones","sc","siteConditions","sunsetZones","sz","renderExposureRange","exposure_low","exposure_high","renderSoilTexture","soilTextures","st","renderSoilPh","soil_ph_low","soil_ph_high","renderSalinityTolerance","salinityTolerance","PestAndDiseaseInfo","renderDiseaseResistant","pd","pestAndDiseaseInfo","diseaseResistant","dr","renderDiseaseSusceptibility","diseaseSusceptibility","ds","TreeInfo","TreeDetail","match","params","getTreeDetail","Spinner","animation","role","PacificIslandsFooter","PacificIslandsBanner","position","zIndex","Jumbotron","QuickLinks","SelectreeNavbar","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","SelectreeHeader","NotFound","ErrorPage","App","exact","path","component","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.c34779ba.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\nimport searchByName from \"./searchByName\";\nimport getTreeDetail from \"./getTreeDetail\";\nimport setSelelectedTree from \"./setSelectedTree\";\n\nexport default combineReducers({ suggestions: searchByName, selectedTree: setSelelectedTree, treeDetail: getTreeDetail });\n","//import { bindActionCreators } from \"redux\";\n\nexport default (state = [], action) => {\n    switch (action.type) {\n        case \"SEARCH_BY_NAME\":\n            return action.payload;\n        default:\n            return state;\n    }\n};","\nexport default (state = [], action) => {\n    switch (action.type) {\n        case \"SET_SELECTED_TREE\":\n            return action.payload;\n        default:\n            return state;\n    }\n};","export default (state = [], action) => {\n    switch (action.type) {\n        case \"GET_TREE_DETAIL\":\n            return action.payload;\n        default:\n            return state;\n    }\n};","import React from \"react\";\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\n\nimport \"./FeaturedTree.css\";\n\nclass FeaturedTree extends React.Component {\n  render() {\n    const image_prefix = process.env.REACT_APP_BASE_IMAGE_URL;\n    return (\n      <Container className=\"mt-5\">\n        <Row>\n          <Col lg={{ span: 4, offset: 2 }}>\n            <Image\n              fluid\n              src={`${image_prefix}/images/1600/39/original/barringtonia-asiatica-tree.jpg`}\n            />\n          </Col>\n          <Col lg={{ span: 5 }}>\n            <h3 className=\"category-label\">FEATURED TREE</h3>\n            <hr />\n            <h4 className='featured-tree-label'>BARRINGTONIA</h4>\n            <p className=\"font-italic text-muted featured-tree-scientific-name\">Barringtonia asiatica</p>\n            <p>\n              There are 39 species of Barringtonia, mostly from tropical Africa, the most famous of which is B. asiatica, from tropical Asia. It’s a tree with broad, shiny leaves, square woody fruits, and white flowers that bloom at night and resemble shaving brushes. Barringtonia thrives around brackish water, near lagoons, and along the coast, and is occasionally planted in Hawai'i. In some areas of the Pacific, the seed is crushed, mixed with water and added to tidal pools to stupefy fish for easier catching.\n            </p>\n            <Button variant=\"outline-dark\" size=\"lg\" className=\"mt-4\">\n              Tree Details\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default FeaturedTree;\n","import React from \"react\";\nimport { } from \"react-bootstrap\";\nimport { ImQuotesLeft } from \"react-icons/im\";\nimport \"./FeaturedQuote.css\";\n\nclass FeaturedQuote extends React.Component {\n    render() {\n        return (\n            <div className=\"container-fluid featured-quote-container blockquote\">\n                <div className=\"featured-quote-quote-container col-lg-8 offset-lg-2\">\n                    <ImQuotesLeft className=\"featured-quote-quote-icon text-secondary\" />\n                    <h2 className=\"featured-quote-quotation\">\n                        Open your eyes and take the time to look: the trees will be happy to reveal their secrets to you.\n                    </h2>\n                    <p className=\"text-muted featured-quote-citation\">-CEDRIC POLLET</p>\n                </div >\n            </div>\n        )\n    }\n}\n\nexport default FeaturedQuote;","import React from \"react\";\nimport { Button } from \"react-bootstrap\"\nimport \"./RegionSelector.css\"\n\nclass RegionSelector extends React.Component {\n    render() {\n        return (\n\n            <div className=\"container p-3 bg-secondary\">\n                <div className=\"col-6 offset-1 d-inline-block\">\n                    <p className=\"region-selector-announcement\">You are searching Pacific Islands UFEI. Click the button to return to the UFEI homepage</p>\n                </div>\n                <div className=\"col-5 d-inline-block\">\n                    <Button variant=\"dark\" size=\"lg\" className=\"region-selector-button\">UFEI HOME PAGE</Button>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default RegionSelector;","// these are for react-select components\n\n\nexport default {\n    option: (provided, state) => ({\n        ...provided,\n        \"&:active\": {\n            backgroundColor: \"#457537\" // background color when clicked\n        },\n        backgroundColor: state.isFocused ? \"#457537\" : \"white\",\n        color: state.isFocused ? \"white\" : \"black\",\n    }),\n    control: (base, state) => ({\n        ...base,\n        '&:hover': { borderColor: '#457537' }, // border style on hover\n        border: state.isFocused ? '1px solid #457537' : '1px solid lighgrey',\n        boxShadow: state.isFocused ? '1px #457537' : 0\n\n    }),\n    multiValue: (styles, { data }) => ({\n        ...styles,\n        // backgroundColor: \"#457537\"\n        // border: \"1px solid #457537\"\n\n    }),\n    multiValueLabel: (styles, { data }) => ({\n        ...styles,\n        color: \"black\"\n    })\n\n};","import React from \"react\";\nimport { Container, Form, Row, Col } from \"react-bootstrap\";\nimport { ImCheckboxChecked } from 'react-icons/im';\nimport { Range } from 'rc-slider';\nimport Select from 'react-select';\nimport 'rc-slider/assets/index.css';\nimport \"./TreeChar.css\";\n// react-select styling options\nimport reactSelectStyles from \"../../customUI/react-select-options\";\n\nclass TreeChar extends React.Component {\n    constructor(props) {\n        super();\n        // local state to track DOM elements\n        this.state = {\n            minTreeHeight: 5,\n            maxTreeHeight: 100,\n            deciduousChecked: false,\n            evergreenChecked: false,\n            fallColorChecked: false,\n            caNativeChecked: false\n\n        }\n    }\n\n    rangeChange = (e) => {\n        let minHeight = Math.ceil(e[0] < 5 ? 5 : 100 * (e[0] * .01));\n        let maxHeight = Math.ceil(100 * (e[1] * .01));\n        this.setState({ minTreeHeight: Math.floor(minHeight), maxTreeHeight: Math.floor(maxHeight) })\n        console.log(`minTreeHeight: ${this.state.minTreeHeight}, maxTreeHeight: ${this.state.maxTreeHeight}`)\n    }\n\n    foliageCheckChange = (e) => {\n        console.log(e.currentTarget.id);\n        switch (e.currentTarget.id) {\n            case \"tree-char-foliage-deciduous\":\n                this.setState({ deciduousChecked: e.currentTarget.checked, evergreenChecked: this.state.evergreenChecked ? false : this.state.evergreenChecked })\n                break;\n            case \"tree-char-foliage-evergreen\":\n                console.log('bing!');\n                this.setState({ evergreenChecked: e.currentTarget.checked, deciduousChecked: this.state.deciduousChecked ? false : this.state.deciduousChecked })\n\n                break;\n            default:\n                return;\n\n        }\n    }\n\n    fallColorCheckChange = () => {\n        this.setState({ fallColorChecked: this.state.fallColorChecked ? false : true });\n    }\n\n    caNativeCheckChange = () => {\n        this.setState({ caNativeChecked: this.state.caNativeChecked ? false : true });\n    }\n\n    selectChange = (selected) => {\n        console.log(`you selected: ${selected.label} with a value of: ${selected.value}`);\n\n    }\n\n\n\n    render() {\n        return (\n            <Container className=\"bg-secondary p-4\">\n                <Row>\n                    <Col>\n                        <h3 className=\"category-label\">TREE CHARACTERISTICS</h3>\n                    </Col>\n                </Row>\n                <Form>\n                    <Row>\n                        <Col lg={{ span: 6 }}>\n                            <Form.Group controlId=\"tree-height\">\n                                <Form.Label id=\"tree-height\">TREE HEIGHT</Form.Label>\n                                <Range className=\"ml-2\" allowCross={false} defaultValue={[0, 100]} min={0} max={100} onChange={this.rangeChange} marks={{\n                                    0: \"5\",\n                                    25: \"25\",\n                                    50: \"50\",\n                                    75: \"75\",\n                                    100: \"100+\"\n                                }}\n                                />\n                            </Form.Group>\n                            <br />\n                            <Form.Group controlId=\"tree-shape\">\n                                <Form.Label id=\"tree-shape\">TREE SHAPE</Form.Label>\n\n                                <Select options={[{ label: \"Shape One\", value: 1 }, { label: \"Shape Two\", value: 2 }]} styles={reactSelectStyles} onChange={this.selectChange} />\n                            </Form.Group>\n\n                            <Form.Group >\n                                <Form.Label id=\"tree-height\">FOLIAGE TYPE</Form.Label>\n                                <Form.Group controlId=\"foliage-type\">\n\n                                    <div className=\"form-check form-check-inline\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" id=\"tree-char-foliage-deciduous\" checked={this.state.deciduousChecked} onChange={this.foliageCheckChange} />\n                                        <span className=\"overlay\">\n                                            <ImCheckboxChecked className=\"icon\" />\n                                        </span>\n                                        <label className=\"form-check-label\" htmlFor=\"tree-char-foliage-deciduous\">Deciduous</label>\n                                    </div>\n                                    <div className=\"form-check form-check-inline\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" id=\"tree-char-foliage-evergreen\" checked={this.state.evergreenChecked} onChange={this.foliageCheckChange} />\n                                        <span className=\"overlay\">\n                                            <ImCheckboxChecked className=\"icon\" />\n                                        </span>\n                                        <label className=\"form-check-label\" htmlFor=\"tree-char-foliage-evergreen\">Evergreen</label>\n                                    </div>\n                                </Form.Group>\n\n                            </Form.Group>\n                        </Col>\n                        <Col lg={{ span: 5, offset: 1 }}>\n                            <Form.Group controlId=\"leaf-form\">\n\n                                <Form.Label id=\"leaf-form\">LEAF FORM</Form.Label>\n\n\n                                <Select options={[{ label: \"Leaf Form One\", value: 1 }, { label: \"Leaf Form Two\", value: 2 }]} styles={reactSelectStyles} onChange={this.selectChange} />\n\n                            </Form.Group>\n\n                            <Form.Group controlId=\"leaf-arrangement\">\n\n                                <Form.Label id=\"leaf-arrangement\">LEAF ARRANGEMENT</Form.Label>\n\n\n                                <Select options={[{ label: \"Leaf Arrangement One\", value: 1 }, { label: \"Leaf Arrangement Two\", value: 2 }]} styles={reactSelectStyles} onChange={this.selectChange} />\n\n                            </Form.Group>\n                            <Row>\n                                <Col lg={{ span: 6 }}>\n                                    <Form.Group controlId=\"fall-color\">\n                                        <Form.Label id=\"fall-color\">FALL COLOR</Form.Label>\n                                        <Form.Group>\n                                            <div className=\"form-check form-check-inline\">\n                                                <input className=\"form-check-input\" type=\"checkbox\" id=\"tree-char-fall-color\" checked={this.state.fallColorChecked} onChange={this.fallColorCheckChange} />\n                                                <span className=\"overlay\">\n                                                    <ImCheckboxChecked className=\"icon\" />\n                                                </span>\n                                                <label className=\"form-check-label\" htmlFor=\"tree-char-fall-color\">Yes</label>\n                                            </div>\n                                        </Form.Group>\n\n                                    </Form.Group>\n                                </Col>\n                                <Col lg={{ span: 6 }}>\n                                    <Form.Group controlId=\"ca-native\">\n                                        <Form.Label id=\"ca-native\">CA NATIVE</Form.Label>\n                                        <Form.Group>\n                                            <div className=\"form-check form-check-inline\">\n                                                <input className=\"form-check-input\" type=\"checkbox\" id=\"tree-char-ca-native\" checked={this.state.caNativeChecked} onChange={this.caNativeCheckChange} />\n                                                <span className=\"overlay\">\n                                                    <ImCheckboxChecked className=\"icon\" />\n                                                </span>\n                                                <label className=\"form-check-label\" htmlFor=\"tree-char-ca-native\">Yes</label>\n                                            </div>\n                                        </Form.Group>\n\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container >\n        )\n    }\n}\n\nexport default TreeChar","import React from \"react\";\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { ImCheckboxChecked } from 'react-icons/im';\nimport \"./FlowersAndFruit.css\";\nimport reactSelectStyles from \"../../customUI/react-select-options\";\n\nclass FlowersAndFruit extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            flowerColor: null\n        }\n    }\n\n    selectFlowerColor = (items) => {\n        // items is an array of {label: x, value: y}\n        try {\n            if (items) {\n                items.map(i => console.log(i));\n            } else {\n                throw new Error('items is invalid');\n            }\n        } catch (err) {\n            console.log(`components.FlowersAndFruit.selectFlowerColor: ${err}`)\n        }\n    }\n\n    fruitSelect = (selected) => {\n        console.log(`you selected: ${selected.label} with a value of: ${selected.value}`);\n    }\n\n\n    render() {\n        return (\n            <Container className=\"bg-secondary p-4 h\">\n                <Row>\n                    <Col>\n                        <h3 className=\"category-label\">FLOWERS AND FRUIT</h3>\n                    </Col>\n                </Row>\n                <Form>\n                    <Col>\n                        <Form.Group controlId=\"flowers-and-fruit\">\n                            <Form.Label id=\"flower-color\">FLOWER COLOR</Form.Label>\n                            <Select isMulti closeMenuOnSelect={false} name=\"flower-colors\" className=\"basic-multi-select\" classNamePrefix=\"select\" options={[{ label: \"Red\", value: 1 }, { label: \"Yellow\", value: 2 }]} styles={reactSelectStyles} onChange={this.selectFlowerColor} />\n                        </Form.Group>\n\n                        <Form.Group control-id=\"fruit-type\">\n                            <Form.Label>FRUIT TYPE</Form.Label>\n                            <Select options={[{ label: \"Fruit One\", value: 1 }, { label: \"Fruit Two\", value: 2 }]} styles={reactSelectStyles} onChange={this.fruitSelect} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"fragrance\">\n                            <Form.Label id=\"ca-native\">Fragrance?</Form.Label>\n                            <div className=\"form-check form-check\">\n                                <input className=\"form-check-input\" type=\"checkbox\" id=\"flowers-and-fruit-fragrance\" checked={this.state.caNativeChecked} onChange={this.caNativeCheckChange} />\n                                <span className=\"overlay\">\n                                    <ImCheckboxChecked className=\"icon\" />\n                                </span>\n                                <label className=\"form-check-label ml-1\" htmlFor=\"flowers-and-fruits-fragrance\">Yes</label>\n                            </div>\n                        </Form.Group>\n                    </Col>\n\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default FlowersAndFruit;","import React from \"react\";\nimport { Row, Col, Form, Container } from \"react-bootstrap\";\nimport { ImCheckboxChecked } from 'react-icons/im';\nimport Select from \"react-select\";\nimport \"./SiteConditions.css\";\nimport reactSelectStyles from \"../../customUI/react-select-options\";\n\n\nclass SiteConditions extends React.Component {\n\n    constructor(props) {\n        super();\n        // will need to convert all this to redux\n        this.state = {\n            selecTreeWaterVeryLow: false,\n            selecTreeWaterLow: false,\n            selecTreeWaterMedium: false,\n            selecTreeWaterHigh: false,\n\n        }\n    }\n\n\n    sunsetZoneSelect = (selected) => {\n        console.log(`you selected: ${selected.label} with a value of: ${selected.value}`);\n    }\n\n    usdaZoneSelect = (selected) => {\n        console.log(`you selected: ${selected.label} with a value of: ${selected.value}`);\n    }\n\n    availablePlantingAreaSelect = (selected) => {\n        console.log(`you selected: ${selected.label} with a value of: ${selected.value}`);\n    }\n\n    selectreeWaterUseChange = (e) => {\n        switch (e.currentTarget.id) {\n            case \"site-conditions-selectree-water-use-vl\":\n                this.setState({ selecTreeWaterVeryLow: this.state.selecTreeWaterVeryLow ? false : true })\n\n                break;\n            case \"site-conditions-selectree-water-use-low\":\n                this.setState({ selecTreeWaterLow: this.state.selecTreeWaterLow ? false : true })\n\n                break;\n            case \"site-conditions-selectree-water-use-med\":\n                this.setState({ selecTreeWaterMedium: this.state.selecTreeWaterMedium ? false : true })\n\n                break;\n            case \"site-conditions-selectree-water-use-high\":\n                this.setState({ selecTreeWaterHigh: this.state.selecTreeWaterHigh ? false : true })\n\n                break;\n            default:\n                return;\n\n        }\n    }\n\n\n    render() {\n        return (\n            <Container className=\"bg-secondary p-4\">\n                <Row>\n                    <Col>\n                        <h3 className=\"category-label\">SITE CONDITIONS</h3>\n                    </Col>\n                </Row>\n                <Form>\n                    <Col>\n                        <Form.Group controlId=\"sunset-western-zones\">\n                            <Form.Label id=\"sunset-western-zones\">SUNSET WESTERN ZONE</Form.Label>\n                            <Select options={[{ label: \"Zone 1\", value: 1 }, { label: \"Zone 2\", value: 2 }]} styles={reactSelectStyles} onChange={this.sunsetZoneSelect} />\n                        </Form.Group>\n                        <Form.Group controlId=\"usda-hardiness-zones\">\n                            <Form.Label id=\"sunset-western-zones\">USDA HARDINESS ZONE</Form.Label>\n                            <Select options={[{ label: \"Zone 1\", value: 1 }, { label: \"Zone 2\", value: 2 }]} styles={reactSelectStyles} onChange={this.usdaZoneSelect} />\n\n                        </Form.Group>\n                        <Form.Group controlId=\"available-planting-area\">\n                            <Form.Label id=\"available-planting-area\">AVAILABLE PLANTING AREA</Form.Label>\n                            <Select options={[{ label: \"Area 1\", value: 1 }, { label: \"Area 2\", value: 2 }]} styles={reactSelectStyles} onChange={this.availablePlantingAreaSelect} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label className=\"d-block\" id=\"selectree-water-use\">SELECTREE WATER USE</Form.Label>\n                            <ul className=\"site-conditions-check-list\">\n                                <li><div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" id=\"site-conditions-selectree-water-use-vl\" checked={this.state.selecTreeWaterVeryLow} onChange={this.selectreeWaterUseChange} />\n                                    <span className=\"overlay\">\n                                        <ImCheckboxChecked className=\"icon\" />\n                                    </span>\n                                    <label className=\"form-check-label\" htmlFor=\"site-conditions-selectree-water-use-vl\">VERY LOW</label>\n                                </div></li>\n                                <li><div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" id=\"site-conditions-selectree-water-use-low\" checked={this.state.selecTreeWaterLow} onChange={this.selectreeWaterUseChange} />\n                                    <span className=\"overlay\">\n                                        <ImCheckboxChecked className=\"icon\" />\n                                    </span>\n                                    <label className=\"form-check-label\" htmlFor=\"site-conditions-selectree-water-use-low\">LOW</label>\n                                </div></li>\n                                <li><div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" id=\"site-conditions-selectree-water-use-med\" checked={this.state.selecTreeWaterMedium} onChange={this.selectreeWaterUseChange} />\n                                    <span className=\"overlay\">\n                                        <ImCheckboxChecked className=\"icon\" />\n                                    </span>\n                                    <label className=\"form-check-label\" htmlFor=\"site-conditions-selectree-water-use-med\">MEDIUM</label>\n                                </div></li>\n                                <li><div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" id=\"site-conditions-selectree-water-use-high\" checked={this.state.selecTreeWaterHigh} onChange={this.selectreeWaterUseChange} />\n                                    <span className=\"overlay\">\n                                        <ImCheckboxChecked className=\"icon\" />\n                                    </span>\n                                    <label className=\"form-check-label\" htmlFor=\"site-conditions-selectree-water-use-high\">HIGH</label>\n                                </div></li>\n                            </ul>\n                        </Form.Group>\n                    </Col>\n                </Form>\n            </Container >\n        )\n    }\n}\n\nexport default SiteConditions;","import React from \"react\";\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\nimport \"./SearchByChar.css\";\n// sub-components\nimport RegionSelector from \"../RegionSelector/RegionSelector\";\nimport TreeChar from \"../TreeChar/TreeChar\";\nimport FlowersAndFruit from \"../FlowersAndFruit/FlowersAndFruit\";\nimport SiteConditions from \"../SiteConditions/SiteConditions\";\n\nclass SearchByChar extends React.Component {\n    render() {\n        return (\n            <Container>\n                <br />\n                <br />\n                <h2 className=\"search-by-char-header text-center category-label\">SEARCH BY CHARACTERISTICS</h2>\n                <div className=\"text-center search-by-char-sm-underline\">\n                    <p>__________</p>\n                </div>\n                <Container>\n                    <Row>\n                        <Col>\n                            <RegionSelector />\n                        </Col>\n                    </Row>\n                    <br />\n                    <Row>\n                        <Col>\n                            <TreeChar />\n                        </Col>\n                    </Row>\n                    <br />\n                    <Row>\n                        <Col lg={6} className=\"equal-height-columns-2 mb-4\">\n                            <FlowersAndFruit />\n                        </Col>\n                        <Col lg={6} className=\"equal-height-columns-2 mb-4\">\n                            <SiteConditions />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"text-center mb-5\">\n                            <Button variant=\"primary\" size=\"lg\">SEARCH</Button>\n                        </Col>\n                    </Row>\n\n                </Container>\n\n            </Container >\n        )\n    }\n}\n\nexport default SearchByChar;","import React from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\n// components\nimport FeaturedTree from \"../FeaturedTree/FeaturedTree\";\nimport FeaturedQuote from \"../FeaturedQuote/FeaturedQuote\"\nimport SearchByChar from \"../SearchByChar/SearchByChar\";\n\nclass SelecTree extends React.Component {\n\n    render() {\n        return (\n            <Container fluid>\n                <Row>\n                    <Col>\n                        <SearchByChar />\n                        <FeaturedTree />\n                        <FeaturedQuote />\n\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n};\n\nexport default SelecTree;","import React from 'react';\nimport { Col } from 'react-bootstrap';\nimport './ResultCounter.css';\n\nclass ResultCounter extends React.Component {\n    render() {\n        return (\n            <Col>\n                <h3 className=\"result-counter-counter\"><span className=\"count\">42</span> TREES</h3>\n            </Col>\n        )\n    }\n}\n\nexport default ResultCounter;","import React from 'react';\nimport { Col, Form } from 'react-bootstrap';\nimport Select from \"react-select\";\nimport \"./ResultFilter.css\";\nimport reactSelectStyles from \"../../customUI/react-select-options\";\n\nclass ResultFilter extends React.Component {\n\n    filterResults = () => {\n        console.log('filtering results...');\n    }\n\n    render() {\n        return (\n            <Col>\n                <Form.Group controlId=\"result-filter\">\n                    <Select isMulti closeMenuOnSelect={false} name=\"result-filter\" className=\"basic-multi-select\" classNamePrefix=\"select\" options={[{ label: \"result-1\", value: \"id-1\" }, { label: \"result 2\", value: \"id-2\" }]} styles={reactSelectStyles} placeholder=\"Filter Results\" onChange={this.filterResults} />\n                </Form.Group>\n            </Col>\n        )\n    }\n}\n\nexport default ResultFilter;","import React from 'react';\nimport { Col, Form } from 'react-bootstrap';\nimport Select from \"react-select\";\nimport \"./ResultSort.css\";\nimport reactSelectStyles from \"../../customUI/react-select-options\"\n\nclass ResultSort extends React.Component {\n    render() {\n        return (\n            <Col>\n                <Form.Group controlId=\"result-sort\">\n                    <Select options={[{ label: \"Scientific Name A-Z\", value: 1 }, { label: \"Scientific Name Z-A\", value: 2 }, { label: \"Common Name A-Z\", val: 3 }, { label: \"Common Name Z-A\", val: 4 }]} styles={reactSelectStyles} placeholder=\"Sort Results By...\" onChange={this.selectChange} />\n                </Form.Group>\n            </Col>\n        )\n    }\n}\n\nexport default ResultSort;","import React from 'react';\nimport { Col, Button } from 'react-bootstrap'\nimport './ResultPagination.css'\n\nclass ResultPagination extends React.Component {\n    render() {\n        return (\n            <Col >\n                <Button variant=\"primary\" className=\"border border-dark  mr-1 result-pagination-btn px-2\">10</Button>\n                <Button variant=\"primary\" className=\"border border-dark  mr-1 result-pagination-btn px-2\">20</Button>\n                <Button variant=\"primary\" className=\"border border-dark  mr-1 result-pagination-btn px-2\">30</Button>\n                <p className=\"d-inline\">per page</p>\n            </Col>\n        )\n    }\n}\n\nexport default ResultPagination;","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport './ResultOps.css';\n// components\nimport ResultCounter from \"../ResultCounter/ResultCounter\";\nimport ResultFilter from \"../ResultFilter/ResultFilter\";\nimport ResultSort from \"../ResultSort/ResultSort\";\nimport ResultPagination from '../ResultPagination/ResultPagination';\n\nclass ResultOps extends React.Component {\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col lg={{ span: 10, offset: 1 }}>\n                        <ResultCounter />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col lg={{ span: 4, offset: 1 }} className=\"d-inline equal-height-columns-2\">\n                        <ResultFilter />\n                    </Col>\n                    <Col lg={{ span: 3 }} className=\"d-inline equal-height-columns-2\">\n                        <ResultSort />\n                    </Col>\n                    <Col lg={{ span: 4 }} className=\"d-inline equal-height-columns-2\">\n                        <ResultPagination />\n                    </Col>\n                </Row>\n\n            </Container >\n        )\n    }\n}\n\nexport default ResultOps;","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport './ResultCard.css';\n\nclass ResultCard extends React.Component {\n    render() {\n        const image_prefix = process.env.REACT_APP_BASE_IMAGE_URL;\n        return (\n            <Card style={{ width: '16rem' }} className=\"result-card mb-4\" >\n                {/* <Card.Body> */}\n                <div className=\"p-1\">\n                    <Card.Title className=\"label-demibold\">VALLEY OAK</Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted font-italic result-card-scientific-name\">Quercus Lobata</Card.Subtitle>\n                </div>\n                <Card.Img variant=\"bottom\" src={`${image_prefix}/images/1200/46/original/quercus-lobata-tree-3.jpg`} />\n                {/* </Card.Body> */}\n            </Card >\n        )\n    }\n}\n\nexport default ResultCard;\n\n","import React from 'react';\nimport { Row, Col, Container, Pagination } from 'react-bootstrap';\nimport './ResultGallery.css'\n// components\nimport ResultCard from \"../ResultCard/ResultCard\";\n\nclass ResultGallery extends React.Component {\n    constructor(props) {\n        super();\n        this.cards = [1, 2, 3, 4, 5, 6];\n    }\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col lg={{ span: 10, offset: 1 }}>\n                        {this.cards.map(card => {\n                            return (\n                                <Col lg={{ span: 4, offset: 0 }} key={`card-${card}`} className=\"result-gallery-card-container\" >\n                                    <ResultCard />\n                                </Col>\n                            )\n                        })}\n                    </Col>\n                </Row>\n                <br />\n                <Row>\n                    <Col lg={{ span: 6, offset: 3 }}>\n                        <Container className=\"text-center\">\n                            <Pagination className=\"result-gallery-pagination\">\n                                <Pagination.First />\n                                <Pagination.Item>{1}</Pagination.Item>\n                                <Pagination.Item active>{2}</Pagination.Item>\n                                <Pagination.Item>{3}</Pagination.Item>\n                                <Pagination.Item>{4}</Pagination.Item>\n                                <Pagination.Item>{5}</Pagination.Item>\n                                <Pagination.Ellipsis />\n                                <Pagination.Last />\n                            </Pagination>\n                        </Container>\n                    </Col>\n                </Row>\n            </Container >\n        )\n    }\n}\n\nexport default ResultGallery;","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: process.env.NODE_ENV === 'local' ? process.env.REACT_APP_LOCALHOST_API : process.env.REACT_APP_PRODUCTION_API\n});","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { searchByName, setSelectedTree } from \"../../actions/search\";\nimport { Col, Form, Button, Table } from \"react-bootstrap\";\nimport htmlParser from 'react-html-parser';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport \"./SearchByName.css\";\nimport uuid from 'react-uuid';\n\nclass SearchByName extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      selectedTreeId: null,\n      matchFound: false\n    }\n\n  }\n  // actions passed in as props\n  componentDidMount() {\n    this.startSearch();\n  }\n\n  startSearch = (input) => {\n    try {\n      if (input) {\n        // look for suggestions\n        if (input.length > 1) {\n          this.setState({ matchFound: false, selectedTreeId: null });\n          this.props.searchByName(input);\n        }\n      } else {\n        // calling searchByName with an empty string clears props.suggestions\n        return this.props.searchByName();\n      }\n    } catch (err) {\n      console.log(`components.SearchByName.startSearch: ${err}`);\n      return;\n    }\n  }\n\n  selectTree = (e) => {\n    try {\n      const treeName = e.currentTarget.getAttribute('data-tree-name');\n      const treeId = e.currentTarget.getAttribute('data-tree-id');\n      this.props.searchByName();\n      let searchInputs = document.getElementsByClassName('search-by-name-input');\n      // setTimeout is a workaround for the onBlur function of the input\n      setTimeout(() => {\n        for (let search of searchInputs) {\n          // there can be multiple search inputs on a page, all should show the current selection\n          let cleanText = treeName.replace(/<\\/?[^>]+(>|$)/g, \"\");\n          search.value = htmlParser(cleanText);\n          search.setAttribute('data-tree-id', treeId);\n        }\n      }, 50);\n    } catch (err) {\n      console.log(`components.SearchByName.selectTree: ${err}`);\n    }\n\n  }\n\n  clearSearch = () => {\n    try {\n      let searchInputs = document.getElementsByClassName('search-by-name-input');\n      for (let search of searchInputs) {\n        // there can be multiple search inputs on a page, clear all of them\n        search.value = \"\";\n        // calling startSearch on an empty input clears the dropdown\n        this.startSearch();\n      }\n    } catch (err) {\n      console.log(`components.SearchByName.clearSearch: ${err}`);\n    }\n  }\n\n\n  getTreeDetailURL = () => {\n    try {\n      let treeId = this.state.selectedTreeId;\n      if (treeId != null) {\n        return (document.location.href = `/tree-detail/${treeId}`);\n      }\n      return;\n    } catch (err) {\n      console.log(`components.SearchByName.getTreeDetailUrl: ${err}`);\n      return null;\n    }\n\n  }\n\n  searchByNameClickHandler = (e) => {\n    try {\n      let treeId = e.currentTarget.getAttribute('data-tree-id');\n      this.setState({ matchFound: true, selectedTreeId: treeId });\n      return (document.location.href = `/tree-detail/${treeId}`);\n    } catch (err) {\n      console.log(`component.SearchByName.searchByNameClickHandler: ${err}`);\n    }\n  }\n\n  onChangeHandler = (treeData) => {\n    try {\n      if (treeData[0] && treeData[0].tree_id) {\n        this.setState({ selectedTreeId: treeData[0].tree_id, matchFound: true });\n      }\n    } catch (err) {\n      console.log(`component.SearchByName.onChangeHandler: ${err}`);\n    }\n\n\n  }\n\n  searchOnEnter = (e) => {\n    try {\n      if (e.key === 'Enter') {\n        // let userInput = e.target.value;\n        if (this.state.matchFound) {\n          let treeId = this.state.selectedTreeId;\n          return (document.location.href = `/tree-detail/${treeId}`);\n        }\n      } else {\n        return;\n      }\n\n    } catch (err) {\n      console.log(`component.SearchByName.searchOnEnter: ${err}`);\n    }\n\n  }\n\n\n\n  getTypeaheadSearch = () => {\n\n    const filterByFields = ['name_concat', 'common', 'family'];\n    return (\n      <div className=\"search-by-name-input\" onKeyPress={this.searchOnEnter}>\n        <Typeahead\n          filterBy={filterByFields}\n          id='typeahead-search'\n          labelKey={(option) => `${htmlParser(option.name_concat.replace(/<\\/?[^>]+(>|$)/g, \"\"))}`\n          }\n          onInputChange={this.startSearch}\n          onClick={this.searchByNameClickHandler}\n          onChange={this.onChangeHandler}\n          options={this.props.suggestions ? this.props.suggestions : []}\n          placeholder=\"Enter a tree name\"\n          renderMenuItemChildren={(option) => (\n            <div\n              data-tree-id={option.tree_id}\n              onClick={this.dropdownClickHandler}\n              onFocus={this.dropdownClickHandler}\n            >\n              <div id={uuid()}>\n                <span id={uuid()}>\n                  {htmlParser(option.name_concat)}\n                </span>\n              </div>\n              <small>\n                <span id={uuid()}>\n                  {option.common}\n                </span>\n              </small>\n            </div>\n          )}\n        />\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"search-by-name-container\">\n        <Form className=\"form-inline\">\n          <Form.Group className=\"row col-12 h-50\">\n            {this.getTypeaheadSearch()}\n            <Button\n              variant=\"success\"\n              type=\"button\"\n              className=\"search-by-name-submit col-3\"\n              onClick={this.getTreeDetailURL}\n            >\n              SEARCH\n            </Button>\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToPros = (state) => {\n  return { suggestions: state.suggestions.data }\n}\n\nexport default connect(mapStateToPros, { searchByName, setSelectedTree })(SearchByName);\n","import api from \"../apis/selectree_api\";\n\n\nexport const searchByName = (searchString) => async (dispatch) => {\n    // this action creator returns an async function, which is possible because of the thunk middleware applied in our base index.js.\n    // we pass a good ol' plain JS object to dispatch, which is what eventually gets passed to the reducers once the middleware has run\n    if (searchString) {\n        const response = await api.get(`/search-by-name?searchString=${searchString}`);\n        return dispatch({ type: \"SEARCH_BY_NAME\", payload: response });\n    } else {\n        return dispatch({ type: \"SEARCH_BY_NAME\", payload: [] })\n    }\n\n};\n\nexport const setSelectedTree = (treeName) => {\n    return { type: \"SET_SELECTED_TREE\", payload: treeName };\n};\n","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport \"./Result.css\";\nimport { GoSearch } from 'react-icons/go';\n// components\nimport ResultOps from \"../ResultOps/ResultOps\";\nimport ResultGallery from \"../ResultGallery/ResultGallery\";\nimport SearchByName from \"../SearchByName/SearchByName\";\nimport SearchByChar from \"../SearchByChar/SearchByChar\";\n\nclass Result extends React.Component {\n    constructor(props) {\n        super();\n    }\n    componentDidMount() {\n        // hack to get region select button in right place with the dimensions it is displayed in on this page\n        const regionButton = document.getElementsByClassName(\"region-selector-button\")[0];\n        regionButton.style.marginTop = \"-20%\";\n    }\n\n\n    render() {\n        return (\n            <Container fluid>\n                <Row>\n                    <Col className>\n                        <ResultOps />\n                        <br />\n                        <ResultGallery />\n                    </Col>\n                </Row>\n                <br />\n                <br />\n                <Row>\n                    <Col lg={{ span: 12, offset: 0 }} className=\"text-center mt-5 mb-3\">\n                        <GoSearch style={{ width: \"3rem\", height: \"3rem\", color: \"#457537\" }} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col lg={{ span: 10, offset: 1 }} className=\"text-center\">\n                        <h3 className=\"label-demibold\">SEARCH TREES BY NAME</h3>\n                        <p>Trees can be searched by their common or scientific name</p>\n                        <p>_______</p>\n                        <br />\n                        <Row>\n                            <Col lg={{ span: 7, offset: 3 }}>\n                                <SearchByName className=\"text-center\" />\n                            </Col>\n\n                        </Row>\n                        <br />\n                        <br />\n                        <br />\n                        <SearchByChar />\n\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Result;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport htmlParser from 'react-html-parser';\nimport './TreeNameInfo.css';\nimport uuid from 'react-uuid';\n\nclass TreeNameInfo extends React.Component {\n\n    renderScientificName = () => {\n        try {\n            if (this.props.treeDetail.scientificName) {\n                return (\n                    <span>{htmlParser(this.props.treeDetail.scientificName)}</span>\n                )\n            } else {\n                throw new Error(`missing scientific name`);\n            }\n        } catch (err) {\n            console.log(`components.TreeNameInfo.renderScientificName: ${err}`);\n            return null;\n        }\n    }\n\n\n    render() {\n        if (this.props.treeDetail) {\n            return (\n                <Container className=\"mt-4\">\n                    <Col xs={{ span: 12 }}>\n                        <Row className=\"tree-name-info-row d-flex justify-content-center\">\n                            <Col xs={{ span: 4 }} className=\"border-right less-line-spacing\">\n                                <h3 className=\"label-demibold\">{this.props.treeDetail.commonName ? this.props.treeDetail.commonName : null}</h3>\n                                <p className=\"font-italic text-lg\">{this.renderScientificName()}</p>\n                                <p className=\"font-weight-bold\">Family: <span className=\"font-italic font-weight-normal\">{this.props.treeDetail.familyName ? this.props.treeDetail.familyName : null}</span></p>\n                            </Col>\n                            <Col xs={{ span: 4 }} className=\"less-line-spacing\">\n                                <h3 className=\"label-demibold\">SYNONYMS</h3>\n                                {this.props.treeDetail.synonyms.length ? this.props.treeDetail.synonyms.map(s => {\n                                    return (<p className=\"font-italic\" key={uuid()}>{htmlParser(s.name_concat)}</p>)\n                                }) : <p>None</p>}\n                            </Col>\n                            <Col xs={{ span: 4 }} className=\"border-left less-line-spacing\">\n                                <h3 className=\"label-demibold\">ADDITIONAL COMMON NAMES</h3>\n                                {this.props.treeDetail.otherCommonNames.length ? this.props.treeDetail.otherCommonNames.map(s => {\n                                    return (<p key={uuid()}>{s}</p>)\n                                }) : <p>None</p>}\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Row>\n                        <Col xs={{ span: 12 }}>\n                            <p className=\"tree-name-info-family\">See all <a href=\"#\" className=\"font-italic primary\">{this.props.treeDetail.genus}</a></p>\n                        </Col>\n                    </Row>\n                </Container>\n            )\n        } else {\n            console.log(`components.TreeNameInfo: treeDetail empty`);\n            return null;\n        }\n\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return { treeDetail: state.treeDetail.data }\n}\n\nexport default connect(mapStateToProps, {})(TreeNameInfo);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport './TreeDetailGallery.css';\nimport uuid from 'react-uuid';\n\nclass TreeDetailGallery extends React.Component {\n\n    constructor(props) {\n        super();\n\n    }\n\n    renderTreeDetailGallery = () => {\n        try {\n            if (this.props.treeDetail && this.props.treeDetail.images) {\n                let gallery = this.props.treeDetail.images.map((image) => (\n                    <li className=\"tree-detail-gallery-image\" key={uuid()}><Image src={image.link} fluid /></li>\n                ));\n\n                return gallery;\n            } else {\n                throw new Error('no gallery');\n            }\n        } catch (err) {\n            console.log(`components.TreeDetailGallery.renderTreeDetailGallery: ${err}`);\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row className=\"\">\n                    <Col>\n                        <ul className=\"ul-grid-centered\">\n                            {this.renderTreeDetailGallery()}\n                        </ul>\n                    </Col>\n                </Row>\n            </Container >\n        )\n    }\n\n}\nconst mapStateToProps = (state) => {\n    return { treeDetail: state.treeDetail.data }\n}\n\nexport default connect(mapStateToProps, {})(TreeDetailGallery);","import React from 'react';\nimport htmlParser from 'react-html-parser';\nimport { connect } from 'react-redux';\nimport { Card } from 'react-bootstrap';\nimport './TreeInfoCard.css';\n\nclass GeneralInfo extends React.Component {\n\n    renderMemo = () => {\n        try {\n            if (this.props.treeDetail && this.props.treeDetail.generalInfo && this.props.treeDetail.generalInfo.memo) {\n                return (\n                    <span className=\"tree-info-card-text\" dangerouslySetInnerHTML={{ __html: htmlParser(this.props.treeDetail.generalInfo.memo) }} />\n                )\n            } else {\n                throw new Error(`generalInfo missing`)\n\n            }\n        } catch (err) {\n            console.log(`components.GeneralInfo.renderMemo: ${err}`);\n            return null;\n        }\n        // return htmlParser(this.props.treeDetail.generalInfo.memo);\n    }\n\n    renderNativeRange = () => {\n        try {\n            if (this.props.treeDetail && this.props.treeDetail.generalInfo && this.props.treeDetail.generalInfo.native_range) {\n                return (\n                    <span className=\"tree-info-card-text\">Native to  <span>{this.props.treeDetail.generalInfo.native_range}</span></span>\n                )\n            } else {\n                throw new Error('native_range empty');\n            }\n        } catch (err) {\n            console.log(`componetns.GeneralInfo.renderNativeRange: ${err}`)\n            return null;\n        }\n    }\n\n\n\n\n    render() {\n        const gen = this.props.treeDetail.generalInfo;\n        return (\n            <Card className=\"tree-info-card bg-secondary\">\n                <Card.Body>\n                    <Card.Title className=\"label-bold text-lg\">General Info</Card.Title>\n                    <Card.Text>\n                        {this.renderMemo()}\n                        {this.renderNativeRange()}\n                        {this.props.treeDetail.familyName ? <span className=\"tree-info-card-text\"><span className=\"font-weight-bold\">Family</span>: <span className=\"font-italic\">{this.props.treeDetail.familyName}</span></span> : null}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { treeDetail: state.treeDetail.data }\n}\nexport default connect(mapStateToProps, {})(GeneralInfo);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Card } from 'react-bootstrap';\nimport uuid from 'react-uuid';\nimport '../TreeInfoCard/TreeInfoCard.css';\n\nclass SiteConditions extends React.Component {\n\n    renderSunsetZones = () => {\n        try {\n            const sc = this.props.treeDetail.siteConditions;\n            if (sc.sunsetZones && sc.sunsetZones.length) {\n                return (\n                    <span>Sunset Zones: {sc.sunsetZones.map((sz, i) => {\n                        return (\n                            <span key={uuid()}>{sz}{i < sc.sunsetZones.length - 1 ? ', ' : null}</span>\n                        )\n                    })}</span>\n                )\n            } else {\n                return null;\n            }\n        } catch (err) {\n            console.log(`components.TreeInfoCard.SiteConditions.renderSunsetZones: ${err}`);\n            return null;\n        }\n\n\n    }\n\n    renderExposureRange = () => {\n        try {\n            const sc = this.props.treeDetail.siteConditions;\n            if (sc.exposure_low) {\n                return (<span>Exposure: {sc.exposure_high ? `${sc.exposure_low} to ${sc.exposure_high}` : `${sc.exposure_low}`}</span>)\n            } else {\n                return null;\n            }\n        } catch (err) {\n            console.log(`components.TreeInfoCards.SiteConditions.renderExposureRange: ${err}`);\n            return null;\n        }\n    }\n\n    renderSoilTexture = () => {\n        try {\n            const sc = this.props.treeDetail.siteConditions;\n            if (sc.soilTextures.length) {\n                return (\n                    <span>Soil Texture: {sc.soilTextures.map((st, i) => {\n                        return (\n                            <span key={uuid()}>{st}{i < sc.soilTextures.length - 1 ? ' or ' : null}</span>\n                        )\n                    })}</span>\n                )\n            } else {\n                return null;\n            }\n        } catch (err) {\n            console.log(`components.TreeInfoCard.SiteConditions.renderSoilTextures: ${err}`);\n            return null;\n        }\n    }\n\n    renderSoilPh = () => {\n        try {\n            const sc = this.props.treeDetail.siteConditions;\n            if (sc.soil_ph_low && sc.soil_ph_high) {\n                return (\n                    <span>Soil pH: {sc.soil_ph_low} to {sc.soil_ph_high}</span>\n                )\n            } else {\n                return null;\n            }\n        } catch (err) {\n            console.log(`components.TreeInfoCard.SiteConditions.renderSoilPh: ${err}`);\n            return null;\n        }\n    }\n\n    renderSalinityTolerance = () => {\n        try {\n            const sc = this.props.treeDetail.siteConditions;\n            if (sc.salinityTolerance.length) {\n                return (\n                    <span>Salinity Tolerance: {sc.salinityTolerance.map((s, i) => {\n                        return (\n                            <span key={uuid()}>{s}{i < sc.salinityTolerance.length - 1 ? ', ' : null}</span>\n                        )\n                    })}</span>\n                )\n            } else {\n                return null;\n            }\n        } catch (err) {\n            console.log(`components.TreeInfoCard.SiteConditions.renderSalinityTolerance: ${err}`);\n            return null;\n        }\n    }\n\n\n    render() {\n        const sc = this.props.treeDetail.siteConditions;\n        return (\n            <Card className=\"tree-info-card bg-secondary\">\n                <Card.Body>\n                    <Card.Title className=\"label-bold text-lg\">Site Conditions and Constraints</Card.Title>\n                    <Card.Text>\n                        <span className=\"tree-info-card-text\">{this.renderSunsetZones()}</span>\n                        <span className=\"tree-info-card-text\">{this.renderExposureRange()}</span>\n                        <span className=\"tree-info-card-text\">{this.renderSoilTexture()}</span>\n                        <span className=\"tree-info-card-text\">{this.renderSoilPh()}</span>\n                        <span className=\"tree-info-card-text\">{this.renderSalinityTolerance()}</span>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { treeDetail: state.treeDetail.data }\n}\n\nexport default connect(mapStateToProps, {})(SiteConditions);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Card } from 'react-bootstrap';\nimport uuid from 'react-uuid';\nimport '../TreeInfoCard/TreeInfoCard.css';\n\nclass PestAndDiseaseInfo extends React.Component {\n\n    renderDiseaseResistant = () => {\n        try {\n            const pd = this.props.treeDetail.pestAndDiseaseInfo;\n            if (pd.diseaseResistant && pd.diseaseResistant.length) {\n                return (\n                    <span className=\"tree-info-card-text\">Resistant to {pd.diseaseResistant.map((dr, i) => {\n                        return (\n                            <span key={uuid()}>{dr}{i < pd.diseaseResistant.length - 1 ? ', ' : null}</span>\n                        )\n                    })}</span>\n                )\n            } else {\n\n                return null;\n            }\n        } catch (err) {\n            console.log(`components.TreeInfoCard.PestAndDiseaseInfo.renderDiseaseResistant: ${err}`);\n            return null;\n        }\n    }\n\n    renderDiseaseSusceptibility = () => {\n        try {\n            const pd = this.props.treeDetail.pestAndDiseaseInfo;\n            if (pd.diseaseSusceptibility && pd.diseaseSusceptibility.length) {\n                return (\n                    <span className=\"tree-info-card-text\">Susceptibile to {pd.diseaseSusceptibility.map((ds, i) => {\n                        return (\n                            <span key={uuid()}>{ds}{i < pd.diseaseSusceptibility.length - 1 ? ', ' : null}</span>\n                        )\n                    })}</span>\n                )\n            } else {\n\n                return null;\n            }\n        } catch (err) {\n            console.log(`components.TreeInfoCard.PestAndDiseaseInfo.renderDiseaseSusceptibility: ${err}`);\n            return null;\n        }\n    }\n\n    render() {\n        const pd = this.props.treeDetail.pestAndDiseaseInfo;\n        return (\n            <Card className=\"tree-info-card bg-secondary\">\n                <Card.Body>\n                    <Card.Title className=\"label-bold text-lg\">Pest and Disease Information</Card.Title>\n                    <Card.Text>\n                        {this.renderDiseaseResistant()}\n                        {this.renderDiseaseSusceptibility()}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return { treeDetail: state.treeDetail.data }\n}\n\nexport default connect(mapStateToProps, {})(PestAndDiseaseInfo);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './TreeInfo.css';\n// components\nimport GeneralInfo from '../TreeInfoCard/GeneralInfo';\nimport SiteConditions from \"../TreeInfoCard/SiteConditions\";\nimport PestAndDiseaseInfo from \"../TreeInfoCard/PestAndDiseaseInfo\";\n\nclass TreeInfo extends React.Component {\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"d-flex align-items-stretch info-card-col\" lg={{ span: 6, offset: 0 }}>\n                        <GeneralInfo />\n                    </Col>\n                    <Col className=\"d-flex align-items-stretch info-card-col\" lg={{ span: 6, offset: 0 }}>\n                        <SiteConditions />\n                    </Col>\n                    <Col className=\"d-flex align-items-stretch info-card-col\" lg={{ span: 6, offset: 0 }}>\n                        <PestAndDiseaseInfo />\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { treeDetail: state.treeDetail.data }\n}\nexport default connect(mapStateToProps, {})(TreeInfo);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\nimport './TreeDetail.css';\n\n// action creators\nimport { getTreeDetail } from \"../../actions/treeDetail\";\n\n// components\nimport TreeNameInfo from \"../TreeNameInfo/TreeNameInfo\";\nimport TreeDetailGallery from \"../TreeDetailGallery/TreeDetailGallery\";\nimport TreeInfo from \"../TreeInfo/TreeInfo\";\nimport SearchByName from \"../SearchByName/SearchByName\";\n\nclass TreeDetail extends React.Component {\n    constructor(props) {\n        super();\n\n    }\n    componentDidMount() {\n        if (this.props.match.params.treeName) {\n            let treeName = this.props.match.params.treeName;\n            this.props.getTreeDetail(treeName);\n        } else {\n            console.log(`components.TreeDetail: no match`);\n        }\n\n    }\n\n    render() {\n        return (\n            this.props.treeDetail ?\n                <Container fluid>\n                    <Row>\n                        <Col xs={{ span: 10, offset: 1 }} >\n                            <TreeNameInfo />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col lg={{ span: 10, offset: 1 }} >\n                            <TreeDetailGallery />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col lg={{ span: 10, offset: 1 }}>\n                            <TreeInfo />\n                        </Col>\n                    </Row>\n                    <br />\n                    <br />\n                    <br />\n                    <Row>\n                        <Col lg={{ span: 5, offset: 4 }}>\n                            <SearchByName />\n                        </Col>\n                    </Row>\n                </Container> : <Container xs={{ span: 4, offset: 4 }} className=\"text-center\"><Spinner animation=\"border\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner></Container>)\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { treeDetail: state.treeDetail.data }\n}\n\nexport default connect(mapStateToProps, { getTreeDetail })(TreeDetail);","import api from \"../apis/selectree_api\";\n\nexport const getTreeDetail = (treeName) => async (dispatch) => {\n    try {\n        if (treeName) {\n            const response = await api.get(`/tree-detail/${treeName}`);\n            return dispatch({ type: \"GET_TREE_DETAIL\", payload: response });\n        } else {\n            throw new Error('no id provided');\n        }\n    } catch (err) {\n        console.log(`Error in client.actions.treeDetail: ${err}`);\n        return dispatch({ type: \"GET_TREE_DETAIL\", payload: [] });\n    }\n}","import React from 'react';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport '../Footer/Footer.css';\nimport './PacificIslandsFooter.css';\n\nclass PacificIslandsFooter extends React.Component {\n    render() {\n        return (\n            <Container className=\"footer pb-0\">\n                <Row>\n                    <Col>\n                        <p>No warranties or guarantees as to the accuracy of the data and information derived from this web site are expressed or implied. The California Polytechnic State University and the Cal Poly Corporation shall not be responsible for any loss of profit, indirect, incidental, special, or consequential damages arising out of the use of the data and information derived from this web site.</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Image className=\"footer-img mr-3\" src=\"/images/logos/CAL-FIRE-Logo.png\" />\n                        <Image className=\"footer-img\" src=\"/images/logos/US_Forest_Service.png\" />\n                        <Image className=\"footer-img\" src=\"/images/logos/DLNR_color.jpg\" />\n                        <Image className=\"footer-img\" src=\"/images/logos/DOFAW_logo.png\" />\n                        <Image className=\"footer-img float-right\" src=\"/images/logos/calpoly-logo.png\" />\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default PacificIslandsFooter;","import React from 'react';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <Container className=\"footer pb-0\">\n                <Row>\n                    <Col>\n                        <p>No warranties or guarantees as to the accuracy of the data and information derived from this web site are expressed or implied. The California Polytechnic State University and the Cal Poly Corporation shall not be responsible for any loss of profit, indirect, incidental, special, or consequential damages arising out of the use of the data and information derived from this web site.</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Image className=\"footer-img mr-3\" src=\"/images/logos/CAL-FIRE-Logo.png\" />\n                        <Image className=\"footer-img\" src=\"/images/logos/US_Forest_Service.png\" />\n                        <Image className=\"footer-img float-right\" src=\"/images/logos/calpoly-logo.png\" />\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Footer;","import React from \"react\";\nimport { Jumbotron, Container, Row, Col } from \"react-bootstrap\";\nimport \"./PacificIslandsBanner.css\";\n// subcomponents\nimport SearchByName from \"../SearchByName/SearchByName\";\n\nclass PacificIslandsBanner extends React.Component {\n    render() {\n        return (\n            <Container fluid style={{ position: 'relative', zIndex: '1000' }}>\n                <Jumbotron className=\"Jumbotron-fluid bg-white p-0 pacific-islands-banner-jumbotron\" style={{ position: 'relative', zIndex: '1000' }} >\n                    <Row className=\"pacific-islands-banner-container\">\n                        <Col lg={{ span: 5, offset: 1 }} className=\"pacific-islands-banner-search-container\" style={{ position: 'relative', zIndex: '1000' }}>\n                            <h1 className=\"pacific-islands-banner-jumbo-h1\"><span className=\"pacific-islands-banner-title\">Pacific Islands</span>SelecTree</h1>\n                            <SearchByName />\n                        </Col>\n                        <Col xs={{ span: 5, offset: 1 }} className=\"d-none d-lg-inline-block px-0 pacific-islands-banner-image-container\">\n\n                        </Col>\n                    </Row>\n                </Jumbotron>\n            </Container>\n\n\n        );\n    }\n}\n\nexport default PacificIslandsBanner;","import React from \"react\";\nimport { Jumbotron, Container, Row, Col } from \"react-bootstrap\";\nimport \"./SelectreeBanner.css\";\n// subcomponents\nimport SearchByName from \"../SearchByName/SearchByName\";\n\nclass SelectreeBanner extends React.Component {\n  render() {\n    return (\n      <Container fluid style={{ position: 'relative', zIndex: '1000' }}>\n        <Jumbotron className=\"Jumbotron-fluid bg-white p-0 selectree-banner-jumbotron\">\n          <Row className=\"selectree-banner-container\">\n            <Col lg={{ span: 5, offset: 1 }} className=\"selectree-banner-search-container\">\n              <h1 className=\"selectree-banner-jumbo-h1\">SelecTree</h1>\n              <SearchByName />\n            </Col>\n            <Col xs={{ span: 5, offset: 1 }} className=\"d-none d-lg-inline-block px-0 selectree-banner-image-container\">\n\n            </Col>\n          </Row>\n        </Jumbotron>\n      </Container>\n\n\n    );\n  }\n}\n\nexport default SelectreeBanner;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport \"./QuickLinks.css\";\nimport { FaHome, FaSearch, FaQuestion } from \"react-icons/fa\";\nclass QuickLinks extends React.Component {\n  render() {\n    return (\n      <Container className=\"mb-0 quicklinks-container\" fluid style={{ position: 'relative', zIndex: '0' }}>\n        <Row className=\"bg-secondary\">\n          <Row className=\"col-10 offset-1 d-flex justify-content-around\n         quicklinks-row\">\n            <a href=\"#\" className=\"btn-circle-md bg-success quicklinks-link\">\n              <span>\n                <FaSearch className=\"btn-icon\" />\n                <p className=\"text-dark quicklink-text-1 d-lg-block d-none\">\n                  SEARCH BY CHARACTERISTICS\n                </p>\n              </span>\n            </a>\n\n            <a href=\"#\" className=\"btn-circle-md bg-success quicklinks-link\">\n              <span>\n                <FaHome className=\"btn-icon\" />\n                <p className=\"text-dark quicklink-text-2 d-lg-block d-none\">\n                  SELECTREE HOME\n                </p>\n              </span>\n            </a>\n            <a href=\"#\" className=\"btn-circle-md bg-success quicklinks-link\">\n              <span>\n                <FaQuestion className=\"btn-icon\" />\n                <p className=\"text-dark quicklink-text-2 d-lg-block d-none\">\n                  SEARCH HELP\n                </p>\n              </span>\n            </a>\n          </Row>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default QuickLinks;\n","import React from \"react\";\nimport {\n  Navbar,\n  Nav,\n  Button,\n  Image,\n  Container\n} from \"react-bootstrap\";\nimport \"./selectreeNavbar.css\";\n\nclass SelectreeNavbar extends React.Component {\n  render() {\n    return (\n      <Container fluid>\n        <Navbar expand=\"xl\" className=\"selectree-navbar bg-white\">\n          <Navbar.Brand href=\"/\" className=\"col-2\">\n            <Image\n              src={`${process.env.PUBLIC_URL}/images/logos/ufei_palms.png`}\n              className=\"selectree-navbar-logo\"\n              fluid\n            />\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"col-10 mr-auto d-flex justify-content-between\">\n              <Nav.Link href=\"/\">HOME</Nav.Link>\n              <Nav.Link href=\"/selectree\">SELECTREE</Nav.Link>\n              <Nav.Link href=\"#link\">URBAN TREE KEY</Nav.Link>\n              <Nav.Link href=\"#link\">FORESTREE</Nav.Link>\n              <Nav.Link href=\"#link\">BIG TREES</Nav.Link>\n              <Nav.Link href=\"#link\">URBAN WOOD</Nav.Link>\n            </Nav>\n            <Button className=\"btn btn-success\">LOG IN</Button>\n          </Navbar.Collapse>\n        </Navbar>\n      </Container>\n    );\n  }\n}\n\nexport default SelectreeNavbar;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport './SelectreeHeader.css';\n// components\nimport SelectreeBanner from \"../SelectreeBanner/SelectreeBanner\";\nimport PacifcIslandsBanner from \"../PacificIslandsBanner/PacificIslandsBanner\"\nimport QuickLinks from \"../QuickLinks/QuickLinks\";\nimport SelectreeNavbar from '../SelectreeNavbar/SelectreeNavbar';\n\nclass SelectreeHeader extends React.Component {\n    render() {\n        return (\n            <Container style={{ position: 'relative', zIndex: '10' }} fluid>\n                <SelectreeNavbar />\n                <PacifcIslandsBanner />\n                <QuickLinks />\n            </Container>\n\n        )\n    }\n}\n\nexport default SelectreeHeader;\n\n","import React from 'react';\nimport './NotFound.css';\n\nclass NotFound extends React.Component {\n    render() {\n        return (\n            <h1>404 - Page Not Found</h1>\n        )\n    }\n\n}\n\nexport default NotFound;\n\n","import React from 'react';\nimport './ErrorPage.css';\n\nclass ErrorPage extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>Whoops, that's an error</h1>\n                <a href=\"/\" className=\"btn btn-primary\">HOME</a>\n            </div>\n\n        )\n    }\n}\n\nexport default ErrorPage;","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Route, Switch } from 'react-router-dom';\n// COMPONENTS\nimport SelecTree from '../../components/SelecTree/SelectTree';\nimport Result from '../../components/Result/Result';\nimport TreeDetail from '../../components/TreeDetail/TreeDetail';\nimport Footer from '../../components/Footer/Footer';\nimport PacifcIslandsFooter from '../../components/PacificIslandsFooter/PacificIslandsFooter';\nimport SelectreeHeader from '../../components/SelectreeHeader/SelectreeHeader';\n// error components\nimport NotFound from \"../../components/NotFound/NotFound\";\nimport ErrorPage from \"../../components/ErrorPage/ErrorPage\";\n\n// global css styles\nimport \"./App.css\";\n\n\nconst App = () => {\n  return (\n    <Container className=\"app-container container-xl\" fluid>\n      <SelectreeHeader />\n      <Switch>\n        <Route exact path=\"/\" component={SelecTree} />\n        <Route exact path=\"/selectree\" component={SelecTree} />\n        <Route exact path=\"/result\" component={Result} />\n        <Route exact path=\"/tree-detail/:treeName\" component={TreeDetail} />\n        <Route exact path=\"/error\" component={ErrorPage} />\n        <Route component={NotFound} />\n      </Switch>\n      <footer className=\"footer mt-5 pt-5 border-top\">\n        <PacifcIslandsFooter />\n      </footer>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers/reducers\";\nimport { BrowserRouter } from 'react-router-dom';\n// for Chrome Redux Devtools Extension\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport App from \"./components/App/App\";\n\n//const store = createStore(reducers, composeWithDevTools);\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />,\n    </BrowserRouter>\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}